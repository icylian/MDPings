package com.sekusarisu.mdpings_v0.ui.theme

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

val Purple80 = Color(0xFFD0BCFF)
val PurpleGrey80 = Color(0xFFCCC2DC)
val Pink80 = Color(0xFFEFB8C8)

val Purple40 = Color(0xFF6650a4)
val PurpleGrey40 = Color(0xFF625b71)
val Pink40 = Color(0xFF7D5260)

val lineDefault1 = Color(0xffb983ff)
val lineDefault2 = Color(0xff91b1fd)
val lineDefault3 = Color(0xff8fdaff)
val line0 = Color(0xFFFFBA8A)
val line1 = Color(0xFFF8E287)
val line2 = Color(0xFFD0F887)
val line3 = Color(0xFF87F8A3)
val line4 = Color(0xFF87F8EF)
val line5 = Color(0xFF87C7F8)
val line6 = Color(0xFF878DF8)
val line7 = Color(0xFFD087F8)
val line8 = Color(0xFFF887D2)
val line9 = Color(0xFFF88798)
val line10 = Color(0xFF6650a4)
val line11 = Color(0xFF625b71)

// GREEN https://material-foundation.github.io/material-theme-builder/
fun lightColorSchemeGreen(): ColorScheme {
    val primaryLight = Color(0xFF4C662B)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFCDEDA3)
    val onPrimaryContainerLight = Color(0xFF102000)
    val secondaryLight = Color(0xFF586249)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFDCE7C8)
    val onSecondaryContainerLight = Color(0xFF151E0B)
    val tertiaryLight = Color(0xFF386663)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFBCECE7)
    val onTertiaryContainerLight = Color(0xFF00201E)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFF9FAEF)
    val onBackgroundLight = Color(0xFF1A1C16)
    val surfaceLight = Color(0xFFF9FAEF)
    val onSurfaceLight = Color(0xFF1A1C16)
    val surfaceVariantLight = Color(0xFFE1E4D5)
    val onSurfaceVariantLight = Color(0xFF44483D)
    val outlineLight = Color(0xFF75796C)
    val outlineVariantLight = Color(0xFFC5C8BA)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF2F312A)
    val inverseOnSurfaceLight = Color(0xFFF1F2E6)
    val inversePrimaryLight = Color(0xFFB1D18A)
    val surfaceDimLight = Color(0xFFDADBD0)
    val surfaceBrightLight = Color(0xFFF9FAEF)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFF3F4E9)
    val surfaceContainerLight = Color(0xFFEEEFE3)
    val surfaceContainerHighLight = Color(0xFFE8E9DE)
    val surfaceContainerHighestLight = Color(0xFFE2E3D8)
    return lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
}

fun darkColorSchemeGreen(): ColorScheme {
    val primaryDark = Color(0xFFB1D18A)
    val onPrimaryDark = Color(0xFF1F3701)
    val primaryContainerDark = Color(0xFF354E16)
    val onPrimaryContainerDark = Color(0xFFCDEDA3)
    val secondaryDark = Color(0xFFBFCBAD)
    val onSecondaryDark = Color(0xFF2A331E)
    val secondaryContainerDark = Color(0xFF404A33)
    val onSecondaryContainerDark = Color(0xFFDCE7C8)
    val tertiaryDark = Color(0xFFA0D0CB)
    val onTertiaryDark = Color(0xFF003735)
    val tertiaryContainerDark = Color(0xFF1F4E4B)
    val onTertiaryContainerDark = Color(0xFFBCECE7)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF12140E)
    val onBackgroundDark = Color(0xFFE2E3D8)
    val surfaceDark = Color(0xFF12140E)
    val onSurfaceDark = Color(0xFFE2E3D8)
    val surfaceVariantDark = Color(0xFF44483D)
    val onSurfaceVariantDark = Color(0xFFC5C8BA)
    val outlineDark = Color(0xFF8F9285)
    val outlineVariantDark = Color(0xFF44483D)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFE2E3D8)
    val inverseOnSurfaceDark = Color(0xFF2F312A)
    val inversePrimaryDark = Color(0xFF4C662B)
    val surfaceDimDark = Color(0xFF12140E)
    val surfaceBrightDark = Color(0xFF383A32)
    val surfaceContainerLowestDark = Color(0xFF0C0F09)
    val surfaceContainerLowDark = Color(0xFF1A1C16)
    val surfaceContainerDark = Color(0xFF1E201A)
    val surfaceContainerHighDark = Color(0xFF282B24)
    val surfaceContainerHighestDark = Color(0xFF33362E)
    return darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )
}

fun lightColorSchemeBlue(): ColorScheme {
    val primaryLight = Color(0xFF415F91)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFD6E3FF)
    val onPrimaryContainerLight = Color(0xFF001B3E)
    val secondaryLight = Color(0xFF565F71)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFDAE2F9)
    val onSecondaryContainerLight = Color(0xFF131C2B)
    val tertiaryLight = Color(0xFF705575)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFFAD8FD)
    val onTertiaryContainerLight = Color(0xFF28132E)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFF9F9FF)
    val onBackgroundLight = Color(0xFF191C20)
    val surfaceLight = Color(0xFFF9F9FF)
    val onSurfaceLight = Color(0xFF191C20)
    val surfaceVariantLight = Color(0xFFE0E2EC)
    val onSurfaceVariantLight = Color(0xFF44474E)
    val outlineLight = Color(0xFF74777F)
    val outlineVariantLight = Color(0xFFC4C6D0)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF2E3036)
    val inverseOnSurfaceLight = Color(0xFFF0F0F7)
    val inversePrimaryLight = Color(0xFFAAC7FF)
    val surfaceDimLight = Color(0xFFD9D9E0)
    val surfaceBrightLight = Color(0xFFF9F9FF)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFF3F3FA)
    val surfaceContainerLight = Color(0xFFEDEDF4)
    val surfaceContainerHighLight = Color(0xFFE7E8EE)
    val surfaceContainerHighestLight = Color(0xFFE2E2E9)
    return lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
}

fun darkColorSchemeBlue(): ColorScheme {
    val primaryDark = Color(0xFFAAC7FF)
    val onPrimaryDark = Color(0xFF0A305F)
    val primaryContainerDark = Color(0xFF284777)
    val onPrimaryContainerDark = Color(0xFFD6E3FF)
    val secondaryDark = Color(0xFFBEC6DC)
    val onSecondaryDark = Color(0xFF283141)
    val secondaryContainerDark = Color(0xFF3E4759)
    val onSecondaryContainerDark = Color(0xFFDAE2F9)
    val tertiaryDark = Color(0xFFDDBCE0)
    val onTertiaryDark = Color(0xFF3F2844)
    val tertiaryContainerDark = Color(0xFF573E5C)
    val onTertiaryContainerDark = Color(0xFFFAD8FD)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF111318)
    val onBackgroundDark = Color(0xFFE2E2E9)
    val surfaceDark = Color(0xFF111318)
    val onSurfaceDark = Color(0xFFE2E2E9)
    val surfaceVariantDark = Color(0xFF44474E)
    val onSurfaceVariantDark = Color(0xFFC4C6D0)
    val outlineDark = Color(0xFF8E9099)
    val outlineVariantDark = Color(0xFF44474E)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFE2E2E9)
    val inverseOnSurfaceDark = Color(0xFF2E3036)
    val inversePrimaryDark = Color(0xFF415F91)
    val surfaceDimDark = Color(0xFF111318)
    val surfaceBrightDark = Color(0xFF37393E)
    val surfaceContainerLowestDark = Color(0xFF0C0E13)
    val surfaceContainerLowDark = Color(0xFF191C20)
    val surfaceContainerDark = Color(0xFF1D2024)
    val surfaceContainerHighDark = Color(0xFF282A2F)
    val surfaceContainerHighestDark = Color(0xFF33353A)
    return darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )
}

fun lightColorSchemeYellow(): ColorScheme {
    val primaryLight = Color(0xFF6D5E0F)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFF8E287)
    val onPrimaryContainerLight = Color(0xFF221B00)
    val secondaryLight = Color(0xFF665E40)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFEEE2BC)
    val onSecondaryContainerLight = Color(0xFF211B04)
    val tertiaryLight = Color(0xFF43664E)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFC5ECCE)
    val onTertiaryContainerLight = Color(0xFF00210F)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFFFF9EE)
    val onBackgroundLight = Color(0xFF1E1B13)
    val surfaceLight = Color(0xFFFFF9EE)
    val onSurfaceLight = Color(0xFF1E1B13)
    val surfaceVariantLight = Color(0xFFEAE2D0)
    val onSurfaceVariantLight = Color(0xFF4B4739)
    val outlineLight = Color(0xFF7C7767)
    val outlineVariantLight = Color(0xFFCDC6B4)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF333027)
    val inverseOnSurfaceLight = Color(0xFFF7F0E2)
    val inversePrimaryLight = Color(0xFFDBC66E)
    val surfaceDimLight = Color(0xFFE0D9CC)
    val surfaceBrightLight = Color(0xFFFFF9EE)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFFAF3E5)
    val surfaceContainerLight = Color(0xFFF4EDDF)
    val surfaceContainerHighLight = Color(0xFFEEE8DA)
    val surfaceContainerHighestLight = Color(0xFFE8E2D4)
    return lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
}

fun darkColorSchemeYellow(): ColorScheme {
    val primaryDark = Color(0xFFDBC66E)
    val onPrimaryDark = Color(0xFF3A3000)
    val primaryContainerDark = Color(0xFF534600)
    val onPrimaryContainerDark = Color(0xFFF8E287)
    val secondaryDark = Color(0xFFD1C6A1)
    val onSecondaryDark = Color(0xFF363016)
    val secondaryContainerDark = Color(0xFF4E472A)
    val onSecondaryContainerDark = Color(0xFFEEE2BC)
    val tertiaryDark = Color(0xFFA9D0B3)
    val onTertiaryDark = Color(0xFF143723)
    val tertiaryContainerDark = Color(0xFF2C4E38)
    val onTertiaryContainerDark = Color(0xFFC5ECCE)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF15130B)
    val onBackgroundDark = Color(0xFFE8E2D4)
    val surfaceDark = Color(0xFF15130B)
    val onSurfaceDark = Color(0xFFE8E2D4)
    val surfaceVariantDark = Color(0xFF4B4739)
    val onSurfaceVariantDark = Color(0xFFCDC6B4)
    val outlineDark = Color(0xFF969080)
    val outlineVariantDark = Color(0xFF4B4739)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFE8E2D4)
    val inverseOnSurfaceDark = Color(0xFF333027)
    val inversePrimaryDark = Color(0xFF6D5E0F)
    val surfaceDimDark = Color(0xFF15130B)
    val surfaceBrightDark = Color(0xFF3C3930)
    val surfaceContainerLowestDark = Color(0xFF100E07)
    val surfaceContainerLowDark = Color(0xFF1E1B13)
    val surfaceContainerDark = Color(0xFF222017)
    val surfaceContainerHighDark = Color(0xFF2D2A21)
    val surfaceContainerHighestDark = Color(0xFF38352B)
    return darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )
}

fun lightColorSchemeRed(): ColorScheme {
    val primaryLight = Color(0xFF8F4C38)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFFFDBD1)
    val onPrimaryContainerLight = Color(0xFF3A0B01)
    val secondaryLight = Color(0xFF77574E)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFFFDBD1)
    val onSecondaryContainerLight = Color(0xFF2C150F)
    val tertiaryLight = Color(0xFF6C5D2F)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFF5E1A7)
    val onTertiaryContainerLight = Color(0xFF231B00)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFFFF8F6)
    val onBackgroundLight = Color(0xFF231917)
    val surfaceLight = Color(0xFFFFF8F6)
    val onSurfaceLight = Color(0xFF231917)
    val surfaceVariantLight = Color(0xFFF5DED8)
    val onSurfaceVariantLight = Color(0xFF53433F)
    val outlineLight = Color(0xFF85736E)
    val outlineVariantLight = Color(0xFFD8C2BC)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF392E2B)
    val inverseOnSurfaceLight = Color(0xFFFFEDE8)
    val inversePrimaryLight = Color(0xFFFFB5A0)
    val surfaceDimLight = Color(0xFFE8D6D2)
    val surfaceBrightLight = Color(0xFFFFF8F6)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFFFF1ED)
    val surfaceContainerLight = Color(0xFFFCEAE5)
    val surfaceContainerHighLight = Color(0xFFF7E4E0)
    val surfaceContainerHighestLight = Color(0xFFF1DFDA)
    return lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
}

fun darkColorSchemeRed(): ColorScheme {
    val primaryDark = Color(0xFFFFB5A0)
    val onPrimaryDark = Color(0xFF561F0F)
    val primaryContainerDark = Color(0xFF723523)
    val onPrimaryContainerDark = Color(0xFFFFDBD1)
    val secondaryDark = Color(0xFFE7BDB2)
    val onSecondaryDark = Color(0xFF442A22)
    val secondaryContainerDark = Color(0xFF5D4037)
    val onSecondaryContainerDark = Color(0xFFFFDBD1)
    val tertiaryDark = Color(0xFFD8C58D)
    val onTertiaryDark = Color(0xFF3B2F05)
    val tertiaryContainerDark = Color(0xFF534619)
    val onTertiaryContainerDark = Color(0xFFF5E1A7)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF1A110F)
    val onBackgroundDark = Color(0xFFF1DFDA)
    val surfaceDark = Color(0xFF1A110F)
    val onSurfaceDark = Color(0xFFF1DFDA)
    val surfaceVariantDark = Color(0xFF53433F)
    val onSurfaceVariantDark = Color(0xFFD8C2BC)
    val outlineDark = Color(0xFFA08C87)
    val outlineVariantDark = Color(0xFF53433F)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFF1DFDA)
    val inverseOnSurfaceDark = Color(0xFF392E2B)
    val inversePrimaryDark = Color(0xFF8F4C38)
    val surfaceDimDark = Color(0xFF1A110F)
    val surfaceBrightDark = Color(0xFF423734)
    val surfaceContainerLowestDark = Color(0xFF140C0A)
    val surfaceContainerLowDark = Color(0xFF231917)
    val surfaceContainerDark = Color(0xFF271D1B)
    val surfaceContainerHighDark = Color(0xFF322825)
    val surfaceContainerHighestDark = Color(0xFF3D322F)
    return darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )
}
